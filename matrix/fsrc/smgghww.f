      SUBROUTINE SGGHWWSM(P,ANS,RESET)
C     
C     Generated by MadGraph 5 v. 1.3.16, 2011-09-11
C     By the MadGraph Development Team
C     Please visit us at https://launchpad.net/madgraph5
C     
C     MadGraph for Madevent Version
C     
C     Returns amplitude squared summed/avg over colors
C     and helicities
C     for the point in phase space P(0:3,NEXTERNAL)
C     
C     Process: b b~ > h > w+ w- QED=4
C     *   Decay: w+ > e+ ve WEIGHTED=2
C     *   Decay: w- > e- ve~ WEIGHTED=2
C     Process: b b~ > h > w+ w- QED=4
C     *   Decay: w+ > e+ ve WEIGHTED=2
C     *   Decay: w- > mu- vm~ WEIGHTED=2
C     Process: b b~ > h > w+ w- QED=4
C     *   Decay: w+ > mu+ vm WEIGHTED=2
C     *   Decay: w- > e- ve~ WEIGHTED=2
C     Process: b b~ > h > w+ w- QED=4
C     *   Decay: w+ > mu+ vm WEIGHTED=2
C     *   Decay: w- > mu- vm~ WEIGHTED=2
C     
      IMPLICIT NONE
      INTEGER RESET
C     
C     CONSTANTS
C     
C      INCLUDE 'genps.inc' 
      REAL*8 LIMHEL
      PARAMETER(LIMHEL=1e-6)
      INTEGER MAXTRIES
      PARAMETER(MAXTRIES=500)
      
C      INCLUDE 'maxconfigs.inc'           
      INTEGER LMAXCONFIGS
      PARAMETER(LMAXCONFIGS=1)

C      INCLUDE 'nexternal.inc'      
      INTEGER    NEXTERNAL
      PARAMETER (NEXTERNAL=6)
      INTEGER    NINCOMING
      PARAMETER (NINCOMING=2)

C      INCLUDE 'maxamps.inc'  
      INTEGER    MAXAMPS, MAXFLOW, MAXPROC, MAXSPROC
      PARAMETER (MAXAMPS=1, MAXFLOW=1)
      PARAMETER (MAXPROC=4, MAXSPROC=1)

      INTEGER                 NCOMB
      PARAMETER (             NCOMB=2) ! dschoute ! only two non-zero combinations ...
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=1)
      INTEGER    NDIAGS
      PARAMETER (NDIAGS=1)
      INTEGER    THEL
      PARAMETER (THEL=2*NCOMB)
C     
C     ARGUMENTS 
C     
      REAL*8 P(0:3,NEXTERNAL),ANS
C     
C     LOCAL VARIABLES 
C     
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY(2)
      INTEGER ISHEL(2)
      REAL*8 T,MHWWSM
      REAL*8 R,SUMHEL,TS(NCOMB)
      INTEGER I,IDEN
      INTEGER JC(NEXTERNAL),II
      LOGICAL GOODHEL(NCOMB,2)
      REAL*8 HWGT, XTOT, XTRY, XREJ, XR, YFRAC(0:NCOMB)
      INTEGER IDUM, NGOOD(2), IGOOD(NCOMB,2)
      INTEGER JHEL(2), J, JJ
c$$$      REAL     XRAN1
c$$$      EXTERNAL XRAN1
C     
C     GLOBAL VARIABLES
C     
      DOUBLE PRECISION AMP2(MAXAMPS), JAMP2(0:MAXFLOW)
      COMMON/TO_AMPS/  AMP2,       JAMP2

      CHARACTER*101         HEL_BUFF
      COMMON/TO_HELICITY/  HEL_BUFF

      INTEGER IMIRROR
      COMMON/TO_MIRROR/ IMIRROR

      REAL*8 POL(2)
      COMMON/TO_POLARIZATION/ POL

C      DATA POL/0d0,0d0/ ! dschoute ! sets whether incoming beams are polarized ... 

      INTEGER          ISUM_HEL
      LOGICAL                    MULTI_CHANNEL
      COMMON/TO_MATRIX/ISUM_HEL, MULTI_CHANNEL
      INTEGER MAPCONFIG(0:LMAXCONFIGS), ICONFIG
      COMMON/TO_MCONFIGS/MAPCONFIG, ICONFIG
      INTEGER SUBDIAG(MAXSPROC),IB(2)
      COMMON/TO_SUB_DIAG/SUBDIAG,IB
      DATA IDUM /0/
      DATA XTRY, XREJ /0,0/
      DATA NTRY /0,0/
      DATA NGOOD /0,0/
      DATA ISHEL/0,0/
      SAVE YFRAC, IGOOD, JHEL
      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(I,  1),I=1,6) /-1,-1, 1,-1,-1, 1/
      DATA (NHEL(I,  2),I=1,6) / 1, 1, 1,-1,-1, 1/

c$$$      DATA (NHEL(I,   1),I=1,6) /-1,-1,-1,-1,-1,-1/
c$$$      DATA (NHEL(I,   2),I=1,6) /-1,-1,-1,-1,-1, 1/
c$$$      DATA (NHEL(I,   3),I=1,6) /-1,-1,-1,-1, 1,-1/
c$$$      DATA (NHEL(I,   4),I=1,6) /-1,-1,-1,-1, 1, 1/
c$$$      DATA (NHEL(I,   5),I=1,6) /-1,-1,-1, 1,-1,-1/
c$$$      DATA (NHEL(I,   6),I=1,6) /-1,-1,-1, 1,-1, 1/
c$$$      DATA (NHEL(I,   7),I=1,6) /-1,-1,-1, 1, 1,-1/
c$$$      DATA (NHEL(I,   8),I=1,6) /-1,-1,-1, 1, 1, 1/
c$$$      DATA (NHEL(I,   9),I=1,6) /-1,-1, 1,-1,-1,-1/
c$$$      DATA (NHEL(I,  10),I=1,6) /-1,-1, 1,-1,-1, 1/
c$$$      DATA (NHEL(I,  11),I=1,6) /-1,-1, 1,-1, 1,-1/
c$$$      DATA (NHEL(I,  12),I=1,6) /-1,-1, 1,-1, 1, 1/
c$$$      DATA (NHEL(I,  13),I=1,6) /-1,-1, 1, 1,-1,-1/
c$$$      DATA (NHEL(I,  14),I=1,6) /-1,-1, 1, 1,-1, 1/
c$$$      DATA (NHEL(I,  15),I=1,6) /-1,-1, 1, 1, 1,-1/
c$$$      DATA (NHEL(I,  16),I=1,6) /-1,-1, 1, 1, 1, 1/
c$$$      DATA (NHEL(I,  17),I=1,6) /-1, 1,-1,-1,-1,-1/
c$$$      DATA (NHEL(I,  18),I=1,6) /-1, 1,-1,-1,-1, 1/
c$$$      DATA (NHEL(I,  19),I=1,6) /-1, 1,-1,-1, 1,-1/
c$$$      DATA (NHEL(I,  20),I=1,6) /-1, 1,-1,-1, 1, 1/
c$$$      DATA (NHEL(I,  21),I=1,6) /-1, 1,-1, 1,-1,-1/
c$$$      DATA (NHEL(I,  22),I=1,6) /-1, 1,-1, 1,-1, 1/
c$$$      DATA (NHEL(I,  23),I=1,6) /-1, 1,-1, 1, 1,-1/
c$$$      DATA (NHEL(I,  24),I=1,6) /-1, 1,-1, 1, 1, 1/
c$$$      DATA (NHEL(I,  25),I=1,6) /-1, 1, 1,-1,-1,-1/
c$$$      DATA (NHEL(I,  26),I=1,6) /-1, 1, 1,-1,-1, 1/
c$$$      DATA (NHEL(I,  27),I=1,6) /-1, 1, 1,-1, 1,-1/
c$$$      DATA (NHEL(I,  28),I=1,6) /-1, 1, 1,-1, 1, 1/
c$$$      DATA (NHEL(I,  29),I=1,6) /-1, 1, 1, 1,-1,-1/
c$$$      DATA (NHEL(I,  30),I=1,6) /-1, 1, 1, 1,-1, 1/
c$$$      DATA (NHEL(I,  31),I=1,6) /-1, 1, 1, 1, 1,-1/
c$$$      DATA (NHEL(I,  32),I=1,6) /-1, 1, 1, 1, 1, 1/
c$$$      DATA (NHEL(I,  33),I=1,6) / 1,-1,-1,-1,-1,-1/
c$$$      DATA (NHEL(I,  34),I=1,6) / 1,-1,-1,-1,-1, 1/
c$$$      DATA (NHEL(I,  35),I=1,6) / 1,-1,-1,-1, 1,-1/
c$$$      DATA (NHEL(I,  36),I=1,6) / 1,-1,-1,-1, 1, 1/
c$$$      DATA (NHEL(I,  37),I=1,6) / 1,-1,-1, 1,-1,-1/
c$$$      DATA (NHEL(I,  38),I=1,6) / 1,-1,-1, 1,-1, 1/
c$$$      DATA (NHEL(I,  39),I=1,6) / 1,-1,-1, 1, 1,-1/
c$$$      DATA (NHEL(I,  40),I=1,6) / 1,-1,-1, 1, 1, 1/
c$$$      DATA (NHEL(I,  41),I=1,6) / 1,-1, 1,-1,-1,-1/
c$$$      DATA (NHEL(I,  42),I=1,6) / 1,-1, 1,-1,-1, 1/
c$$$      DATA (NHEL(I,  43),I=1,6) / 1,-1, 1,-1, 1,-1/
c$$$      DATA (NHEL(I,  44),I=1,6) / 1,-1, 1,-1, 1, 1/
c$$$      DATA (NHEL(I,  45),I=1,6) / 1,-1, 1, 1,-1,-1/
c$$$      DATA (NHEL(I,  46),I=1,6) / 1,-1, 1, 1,-1, 1/
c$$$      DATA (NHEL(I,  47),I=1,6) / 1,-1, 1, 1, 1,-1/
c$$$      DATA (NHEL(I,  48),I=1,6) / 1,-1, 1, 1, 1, 1/
c$$$      DATA (NHEL(I,  49),I=1,6) / 1, 1,-1,-1,-1,-1/
c$$$      DATA (NHEL(I,  50),I=1,6) / 1, 1,-1,-1,-1, 1/
c$$$      DATA (NHEL(I,  51),I=1,6) / 1, 1,-1,-1, 1,-1/
c$$$      DATA (NHEL(I,  52),I=1,6) / 1, 1,-1,-1, 1, 1/
c$$$      DATA (NHEL(I,  53),I=1,6) / 1, 1,-1, 1,-1,-1/
c$$$      DATA (NHEL(I,  54),I=1,6) / 1, 1,-1, 1,-1, 1/
c$$$      DATA (NHEL(I,  55),I=1,6) / 1, 1,-1, 1, 1,-1/
c$$$      DATA (NHEL(I,  56),I=1,6) / 1, 1,-1, 1, 1, 1/
c$$$      DATA (NHEL(I,  57),I=1,6) / 1, 1, 1,-1,-1,-1/
c$$$      DATA (NHEL(I,  58),I=1,6) / 1, 1, 1,-1,-1, 1/
c$$$      DATA (NHEL(I,  59),I=1,6) / 1, 1, 1,-1, 1,-1/
c$$$      DATA (NHEL(I,  60),I=1,6) / 1, 1, 1,-1, 1, 1/
c$$$      DATA (NHEL(I,  61),I=1,6) / 1, 1, 1, 1,-1,-1/
c$$$      DATA (NHEL(I,  62),I=1,6) / 1, 1, 1, 1,-1, 1/
c$$$      DATA (NHEL(I,  63),I=1,6) / 1, 1, 1, 1, 1,-1/
c$$$      DATA (NHEL(I,  64),I=1,6) / 1, 1, 1, 1, 1, 1/

      DATA IDEN/36/
C     ----------
C     BEGIN CODE
C     ----------

      MULTI_CHANNEL = .false. ! dschoute ! single diagram calculation ...

c$$$      NTRY(IMIRROR)=NTRY(IMIRROR)+1
      IF (RESET.EQ.1) THEN
           DO I=1,NCOMB
                GOODHEL(I,IMIRROR)=.FALSE.
           ENDDO
           NTRY(IMIRROR)=0
      ENDIF
      DO I=1,NEXTERNAL
        JC(I) = +1
      ENDDO

c$$$      IF (MULTI_CHANNEL) THEN
c$$$        DO I=1,NDIAGS
c$$$          AMP2(I)=0D0
c$$$        ENDDO
c$$$        JAMP2(0)=1
c$$$        DO I=1,INT(JAMP2(0))
c$$$          JAMP2(I)=0D0
c$$$        ENDDO
c$$$      ENDIF
      ANS = 0D0
c$$$      WRITE(HEL_BUFF,'(20I5)') (0,I=1,NEXTERNAL)
      DO I=1,NCOMB
        TS(I)=0D0
      ENDDO
c$$$      IF (ISHEL(IMIRROR) .EQ. 0 .OR. NTRY(IMIRROR) .LE. MAXTRIES) THEN
        DO I=1,NCOMB
c$$$          IF (GOODHEL(I,IMIRROR) .OR. NTRY(IMIRROR).LE.MAXTRIES) THEN
            T=MHWWSM(P ,NHEL(1,I),JC(1))
c$$$            DO JJ=1,NINCOMING
c$$$              IF(POL(JJ).NE.1D0.AND.
c$$$     $              NHEL(JJ,I).EQ.INT(SIGN(1D0,POL(JJ)))) THEN
c$$$                T=T*ABS(POL(JJ))
c$$$              ELSE IF(POL(JJ).NE.1D0)THEN
c$$$                T=T*(2D0-ABS(POL(JJ)))
c$$$              ENDIF
c$$$            ENDDO
            ANS=ANS+T
            TS(I)=T
c$$$          ENDIF
        ENDDO
c$$$        JHEL(IMIRROR) = 1
c$$$        IF(NTRY(IMIRROR).LE.MAXTRIES)THEN
c$$$          DO I=1,NCOMB
c$$$            IF (.NOT.GOODHEL(I,IMIRROR) .AND. (TS(I).GT.ANS*LIMHEL
c$$$     $       /NCOMB)) THEN
c$$$              GOODHEL(I,IMIRROR)=.TRUE.
c$$$              NGOOD(IMIRROR) = NGOOD(IMIRROR) +1
c$$$              IGOOD(NGOOD(IMIRROR),IMIRROR) = I
c$$$              PRINT *,'Added good helicity ',I,TS(I)*NCOMB/ANS
c$$$            ENDIF
c$$$          ENDDO
c$$$        ENDIF
c$$$        IF(NTRY(IMIRROR).EQ.MAXTRIES)THEN
c$$$          ISHEL(IMIRROR)=MIN(ISUM_HEL,NGOOD(IMIRROR))
c$$$        ENDIF
c$$$      ELSE  !LOOP OVER GOOD HELICITIES
c$$$        DO J=1,ISHEL(IMIRROR)
c$$$          JHEL(IMIRROR)=JHEL(IMIRROR)+1
c$$$          IF (JHEL(IMIRROR) .GT. NGOOD(IMIRROR)) JHEL(IMIRROR)=1
c$$$          HWGT = REAL(NGOOD(IMIRROR))/REAL(ISHEL(IMIRROR))
c$$$          I = IGOOD(JHEL(IMIRROR),IMIRROR)
c$$$          T=MHWWSM(P ,NHEL(1,I),JC(1))
c$$$          DO JJ=1,NINCOMING
c$$$            IF(POL(JJ).NE.1D0.AND.NHEL(JJ,I).EQ.INT(SIGN(1D0,POL(JJ)))
c$$$     $       ) THEN
c$$$              T=T*ABS(POL(JJ))
c$$$            ELSE IF(POL(JJ).NE.1D0)THEN
c$$$              T=T*(2D0-ABS(POL(JJ)))
c$$$            ENDIF
c$$$          ENDDO
c$$$          ANS=ANS+T*HWGT
c$$$          TS(I)=T*HWGT
c$$$        ENDDO
c$$$        IF (ISHEL(IMIRROR) .EQ. 1) THEN
c$$$          WRITE(HEL_BUFF,'(20i5)')(NHEL(II,I),II=1,NEXTERNAL)
c$$$        ENDIF
c$$$      ENDIF
c$$$      IF (ISHEL(IMIRROR) .NE. 1) THEN
c$$$        R=XRAN1(IDUM)*ANS
c$$$        SUMHEL=0D0
c$$$        DO I=1,NCOMB
c$$$          SUMHEL=SUMHEL+TS(I)
c$$$          IF(R.LT.SUMHEL)THEN
c$$$            WRITE(HEL_BUFF,'(20i5)')(NHEL(II,I),II=1,NEXTERNAL)
c$$$            GOTO 10
c$$$          ENDIF
c$$$        ENDDO
c$$$ 10     CONTINUE
c$$$      ENDIF
c$$$      IF (MULTI_CHANNEL) THEN
c$$$        XTOT=0D0
c$$$        DO I=1,NDIAGS
c$$$          XTOT=XTOT+AMP2(I)
c$$$        ENDDO
c$$$        IF (XTOT.NE.0D0) THEN
c$$$          ANS=ANS*AMP2(SUBDIAG(1))/XTOT
c$$$        ELSE
c$$$          ANS=0D0
c$$$        ENDIF
c$$$      ENDIF
      ANS=ANS/DBLE(IDEN)
      END


      REAL*8 FUNCTION MHWWSM(P,NHEL,IC)
C     
C     Generated by MadGraph 5 v. 1.3.16, 2011-09-11
C     By the MadGraph Development Team
C     Please visit us at https://launchpad.net/madgraph5
C     
C     Returns amplitude squared summed/avg over colors
C     for the point with external lines W(0:6,NEXTERNAL)
C     
C     Process: b b~ > h > w+ w- QED=4
C     *   Decay: w+ > e+ ve WEIGHTED=2
C     *   Decay: w- > e- ve~ WEIGHTED=2
C     Process: b b~ > h > w+ w- QED=4
C     *   Decay: w+ > e+ ve WEIGHTED=2
C     *   Decay: w- > mu- vm~ WEIGHTED=2
C     Process: b b~ > h > w+ w- QED=4
C     *   Decay: w+ > mu+ vm WEIGHTED=2
C     *   Decay: w- > e- ve~ WEIGHTED=2
C     Process: b b~ > h > w+ w- QED=4
C     *   Decay: w+ > mu+ vm WEIGHTED=2
C     *   Decay: w- > mu- vm~ WEIGHTED=2
C     
      IMPLICIT NONE
      INTEGER RESET
C     
C     CONSTANTS
C     
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=1)

C      INCLUDE 'genps.inc' 
      REAL*8 LIMHEL
      PARAMETER(LIMHEL=1e-6)
      INTEGER MAXTRIES
      PARAMETER(MAXTRIES=500)
      
C      INCLUDE 'nexternal.inc'      
      INTEGER    NEXTERNAL
      PARAMETER (NEXTERNAL=6)
      INTEGER    NINCOMING
      PARAMETER (NINCOMING=2)

C      INCLUDE 'maxamps.inc'  
      INTEGER    MAXAMPS, MAXFLOW, MAXPROC, MAXSPROC
      PARAMETER (MAXAMPS=1, MAXFLOW=1)
      PARAMETER (MAXPROC=4, MAXSPROC=1)

      INTEGER    NWAVEFUNCS,     NCOLOR
      PARAMETER (NWAVEFUNCS=9, NCOLOR=1)
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
      COMPLEX*16 IMAG1
      PARAMETER (IMAG1=(0D0,1D0))
C     
C     ARGUMENTS 
C     
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
C     
C     LOCAL VARIABLES 
C     
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(6,NWAVEFUNCS)
C     
C     GLOBAL VARIABLES
C     
      DOUBLE PRECISION AMP2(MAXAMPS), JAMP2(0:MAXFLOW)
      COMMON/TO_AMPS/  AMP2,       JAMP2

c$$$ C      INCLUDE 'coupl.inc'
c$$$      DOUBLE PRECISION G
c$$$      COMMON/STRONG/ G
c$$$
c$$$      DOUBLE COMPLEX GAL(2)
c$$$      COMMON/WEAK/ GAL
c$$$
c$$$
c$$$      DOUBLE PRECISION MB,MH,MT,MW,MTA,MZ
c$$$
c$$$      COMMON/MASSES/ MB,MH,MT,MW,MTA,MZ
c$$$
c$$$
c$$$      DOUBLE PRECISION WW,WT,WZ,WH
c$$$
c$$$      COMMON/WIDTHS/ WW,WT,WZ,WH
c$$$ C     Modified couplings block ... ! dschoute !
c$$$      DOUBLE PRECISION GC_7,GC_16,GC_21,GC_22,GC_23,GC_31,GC_33
c$$$
c$$$      COMMON/SMCOUPLINGS/ GC_7,GC_16,GC_21,GC_22,GC_23,GC_31,GC_33
      INCLUDE 'SMCOUPLINGS.INC' 
C     
C     COLOR DATA
C     
      DATA DENOM(1)/1/
      DATA (CF(I,  1),I=  1,  1) /    3/
C     1 T(2,1)
C     ----------
C     BEGIN CODE
C     ----------
      CALL IXXXXX(P(0,1),MB,NHEL(1),+1*IC(1),W(1,1))
      CALL OXXXXX(P(0,2),MB,NHEL(2),-1*IC(2),W(1,2))
      CALL IXXXXX(P(0,3),ZERO,NHEL(3),-1*IC(3),W(1,3)) ! l+
      CALL OXXXXX(P(0,4),ZERO,NHEL(4),+1*IC(4),W(1,4))
      CALL FFV2_3(W(1,3),W(1,4),GC_16,MW, WW, W(1,5))
      CALL OXXXXX(P(0,5),ZERO,NHEL(5),+1*IC(5),W(1,6)) ! l-
      CALL IXXXXX(P(0,6),ZERO,NHEL(6),-1*IC(6),W(1,7))
      CALL FFV2_3(W(1,7),W(1,6),GC_16,MW, WW, W(1,8))
      CALL FFS1_3(W(1,1),W(1,2),GC_33,MH, WH, W(1,9))
      CALL VVS1_0(W(1,8),W(1,5),W(1,9),GC_31,AMP(1))
      JAMP(1)=-AMP(1)
      MHWWSM = 0.D0
      DO I = 1, NCOLOR
        ZTEMP = (0.D0,0.D0)
        DO J = 1, NCOLOR
          ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
        ENDDO
        MHWWSM=MHWWSM+ZTEMP*DCONJG(JAMP(I))/DENOM(I)
      ENDDO
      AMP2(1)=AMP2(1)+AMP(1)*DCONJG(AMP(1))
      DO I = 1, NCOLOR
        JAMP2(I)=JAMP2(I)+JAMP(I)*DCONJG(JAMP(I))
      ENDDO
c$$$      PRINT *,MHWWSM,': ',NHEL(1),' ',NHEL(2),' ',NHEL(3),' ',NHEL(4),
c$$$     +        ' ',NHEL(5),' ',NHEL(6) ! dschoute ! discover which helicity combinations are OK
      END

